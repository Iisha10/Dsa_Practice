class Solution {
public:
int func(vector<vector<int>>&grid, int row, int col){
    if(row>=grid.size() || row<0 || col>=grid[0].size() || col<0 || grid[row][col]==0){
        return 0;
    }
    int orginal=grid[row][col];
    grid[row][col]=0;
    int maxi=0;
    int drow[]={-1, 0, 1, 0};
    int dcol[]={0, 1, 0, -1};
    for(int i=0; i<4; i++){
        int nrow=row+drow[i];
        int ncol=col+dcol[i];
        maxi=max(maxi, func(grid, nrow, ncol));
    }
    grid[row][col]=orginal;

    return orginal+maxi;
}
    int getMaximumGold(vector<vector<int>>& grid) {
        int n=grid.size();
        int m=grid[0].size();
        int maxi=0;
        for(int i=0; i<n; i++){
            for(int j=0; j<m;j++){
                if(grid[i][j]!=0){
                    maxi=max(maxi, func(grid, i, j));
                }
            }
        }
        return maxi;
    }
};
