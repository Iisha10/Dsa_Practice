/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* reverseBetween(ListNode* head, int left, int right) {
        if(head==NULL || left==right){
            return head;
        }
        ListNode* dummy=new ListNode(-1);
        dummy->next=head;
        ListNode* prev1=dummy;
        for(int i=0; i<left-1; i++){
            prev1=prev1->next;
        }
        ListNode* curr=prev1->next;
        ListNode* nextNode=NULL;
        ListNode* prev2=NULL;

        for(int i=0; i<right-left+1; i++){
            nextNode=curr->next;
            curr->next=prev2;
            prev2=curr;
            curr=nextNode;
        }
        prev1->next->next=curr;
        prev1->next=prev2;
        return dummy->next;
    }
};
