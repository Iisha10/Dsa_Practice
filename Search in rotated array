class Solution {
public:
int func(vector<int>&nums){
    int n=nums.size();
    int l=0, h=n-1;
    while(l<h){
        int mid=l+(h-l)/2;
        if(nums[mid]>nums[h]){
            l=mid+1;
        }
        else{
            h=mid;
        }
    }
    return h;

}
int findt(vector<int>&nums, int tar, int st, int end){
    int low=st, high=end;
    while(low<=high){
        int mid=low+(high-low)/2;
        if(nums[mid]==tar){
            return mid;
        }
        else if(nums[mid]<tar){
            low=mid+1;
        }
        else{
            high=mid-1;
        }
    }
    return -1;
}
    int search(vector<int>& nums, int target) {
        int ind=func(nums);
        int rt=findt(nums, target, 0, ind-1);
        if(rt>-1){
            return rt;
        }
        int lt=findt(nums, target, ind, nums.size()-1);
        if(lt!=-1){
            return lt;
        }
        return -1;
    }
};
